[1/12] Performing build step for 'bootloader'
[1/1] cd /home/abhi/esp32/esp-idf/projects/esp-esp-comms/build/bootloader/esp-idf/esptool_py && /home/abhi/.espressif/python_env/idf5.2_py3.8_env/bin/python /home/abhi/esp32/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/abhi/esp32/esp-idf/projects/esp-esp-comms/build/bootloader/bootloader.bin
Bootloader binary size 0x6910 bytes. 0x6f0 bytes (6%) free.
[2/10] Linking C static library esp-idf/protocol_examples_common/libprotocol_examples_common.a
[3/10] Linking C static library esp-idf/wifi_provisioning/libwifi_provisioning.a
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/esp-esp-comms-client.c.obj
../main/esp-esp-comms-client.c: In function 'connect_tcp_server':
../main/esp-esp-comms-client.c:86:10: warning: unused variable 'buffer' [-Wunused-variable]
   86 |     char buffer[BUFFER_SIZE];
      |          ^~~~~~
../main/esp-esp-comms-client.c:85:40: warning: unused variable 'client_address' [-Wunused-variable]
   85 |     struct sockaddr_in server_address, client_address;
      |                                        ^~~~~~~~~~~~~~
../main/esp-esp-comms-client.c:84:13: warning: unused variable 'server_socket' [-Wunused-variable]
   84 |         int server_socket, client_socket;
      |             ^~~~~~~~~~~~~
../main/esp-esp-comms-client.c: At top level:
../main/esp-esp-comms-client.c:69:13: warning: 'ip_event_handler' defined but not used [-Wunused-function]
   69 | static void ip_event_handler(void* arg, esp_event_base_t event_base,
      |             ^~~~~~~~~~~~~~~~
../main/esp-esp-comms-client.c:48:13: warning: 'wifi_event_handler' defined but not used [-Wunused-function]
   48 | static void wifi_event_handler(void* arg, esp_event_base_t event_base,
      |             ^~~~~~~~~~~~~~~~~~
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Building C object CMakeFiles/esp-esp-comms.elf.dir/project_elf_src_esp32.c.obj
[8/10] Linking CXX executable esp-esp-comms.elf
[9/10] Generating binary image from built executable
esptool.py v4.7.dev2
Creating esp32 image...
Merged 27 ELF sections
Successfully created esp32 image.
Generated /home/abhi/esp32/esp-idf/projects/esp-esp-comms/build/esp-esp-comms.bin
[10/10] cd /home/abhi/esp32/esp-idf/projects/esp-esp-comms/build/esp-idf/esptool_py && /home/abhi/.espressif/python_env/idf5.2_py3.8_env/bin/python /home/abhi/esp32/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/abhi/esp32/esp-idf/projects/esp-esp-comms/build/partition_table/partition-table.bin /home/abhi/esp32/esp-idf/projects/esp-esp-comms/build/esp-esp-comms.bin
esp-esp-comms.bin binary size 0xbcef0 bytes. Smallest app partition is 0x100000 bytes. 0x43110 bytes (26%) free.
